"""
For a game with 8 tiles of blocks on a 3x3 grid,
write down the Facts and Rules to model the game state 
shown as the follows:

 y\\x   pos1     pos2     pos3
     ┌────────┬────────┬────────┐
pos1 │ tile1  │ tile2  │ tile3  │
     ├────────┼────────┼────────┤
pos2 │ tile8  │ empty  │ tile4  │
     ├────────┼────────┼────────┤
pos3 │ tile7  │ tile6  │ tile5  │
     └────────┴────────┴────────┘

Example: 
fact: (pred obj1 obj2)
rule: ((pred obj1 obj2) (pred obj2 obj3)) -> (pred obj1 obj3)

Trick: In this game, two tiles A and B are adjacent if they:

share the X coordinate or the Y coordinate, and
either A or B has the value 2 on the coordinate they do not share.
This ends up being four rules for adjacency.
A tile at (1,1) is adjacent to a blank at (1,2) or (2,1).
Adjacency is about the only inference you have to make for this in terms of the description of the world.

(movable ?piece ?initialX ?initialY ?targetx ?targety)

"""

fact: (coordinate tile1 pos1 pos1)
fact: (coordinate tile2 pos2 pos1)
fact: (coordinate tile3 pos3 pos1)
fact: (coordinate tile8 pos1 pos2)
fact: (coordinate emptyTile pos2 pos2)
fact: (coordinate tile4 pos3 pos2)
fact: (coordinate tile7 pos1 pos3)
fact: (coordinate tile6 pos2 pos3)
fact: (coordinate tile5 pos3 pos3)

fact: (empty emptyTile)

rule: ((coordinate ?tileA ?x ?y) (coordinate ?tileB pos2 ?y)) -> (adjacent ?tileA ?tileB)
rule: ((coordinate ?tileA pos2 ?y) (coordinate ?tileB ?x ?y)) -> (adjacent ?tileA ?tileB)
rule: ((coordinate ?tileA ?x ?y) (coordinate ?tileB ?x pos2)) -> (adjacent ?tileA ?tileB)
rule: ((coordinate ?tileA ?x pos2) (coordinate ?tileB ?x ?y)) -> (adjacent ?tileA ?tileB)
rule: ((adjacent ?tileA ?tileB) (empty ?tileB) (coordinate ?tileA ?xA ?yA) (coordinate ?tileB ?xB ?yB)) -> (movable ?tileA ?xA ?yA ?xB ?yB)